<?xml version="1.0"?>
<!-- ***** BEGIN LICENSE BLOCK *****
   - Version: MPL 1.1/GPL 2.0/LGPL 2.1
   -
   - The contents of this file are subject to the Mozilla Public License Version
   - 1.1 (the "License"); you may not use this file except in compliance with
   - the License. You may obtain a copy of the License at
   - http://www.mozilla.org/MPL/
   -
   - Software distributed under the License is distributed on an "AS IS" basis,
   - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   - for the specific language governing rights and limitations under the
   - License.
   -
   - The Original Code is the Instantbird messenging client, released
   - 2009.
   -
   - The Initial Developer of the Original Code is
   -     Benedikt P. <leeraccount@yahoo.de>.
   - Portions created by the Initial Developer are Copyright (C) 2009
   - the Initial Developer. All Rights Reserved.
   -
   - Contributor(s):
   -
   - Alternatively, the contents of this file may be used under the terms of
   - either the GNU General Public License Version 2 or later (the "GPL"), or
   - the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
   - in which case the provisions of the GPL or the LGPL are applicable instead
   - of those above. If you wish to allow use of your version of this file only
   - under the terms of either the GPL or the LGPL, and not to allow others to
   - use your version of this file under the terms of the MPL, indicate your
   - decision by deleting the provisions above and replace them with the notice
   - and other provisions required by the GPL or the LGPL. If you do not delete
   - the provisions above, a recipient may use your version of this file under
   - the terms of any one of the MPL, the GPL or the LGPL.
   -
   - ***** END LICENSE BLOCK ***** -->


<!DOCTYPE bindings [
  <!ENTITY % instantbirdDTD SYSTEM "chrome://instantbird/locale/instantbird.dtd">
  %instantbirdDTD;
]>

<bindings id="notificationBindings"
          xmlns="http://www.mozilla.org/xbl"
          xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
          xmlns:xbl="http://www.mozilla.org/xbl">
  <binding id="topicnotification"
           extends="chrome://global/content/bindings/notification.xml#notification">
    <content>
      <xul:hbox class="notification-inner outset" flex="1" xbl:inherits="type">
        <xul:hbox anonid="details" align="center" flex="1">
          <xul:deck anonid="notificationdeck" selectedIndex="0" flex="1">
            <xul:hbox flex="1" align="center" ondblclick="editTopic();">
              <xul:image anonid="messageImage"
                         class="messageImage"
                         xbl:inherits="src=image"/>
              <xul:description anonid="messageText"
                               class="messageText"
                               flex="1"
                               xbl:inherits="xbl:text=label"
                               tooltiptext="&topicBar.tooltip;"/>
              <children/>
            </xul:hbox>
            <xul:hbox flex="1" align="center">
              <xul:image anonid="messageImage"
                         class="messageImage"
                         xbl:inherits="src=image"/>
              <xul:textbox anonid="newtopictextbox" flex="1"/>
              <xul:button label="&topicBar.button.label;" oncommand="setTopic();"
                          accesskey="&topicBar.button.accesskey;"/>
            </xul:hbox>
          </xul:deck>
        </xul:hbox>
        <xul:toolbarbutton anonid="topicBarCloseButton"
                           ondblclick="event.stopPropagation();"
                           class="messageCloseButton tabbable"
                           xbl:inherits="hidden=hideclose"
                           oncommand="closeBar();"/>
      </xul:hbox>
    </content>
    <implementation>
      <property name="deck"
                onget="return document.getAnonymousElementByAttribute(this, 'anonid', 'notificationdeck');"/>
      <property name="textbox"
                onget="return document.getAnonymousElementByAttribute(this, 'anonid', 'newtopictextbox');"/>

      <method name="editTopic">
        <body>
          <![CDATA[
            this.deck.selectedIndex = 1;
            let textboxElt = this.textbox;
            textboxElt.value = this.label;
            textboxElt.focus();
            if (!("TextboxSpellChecker" in window))
              Components.utils.import("resource:///modules/imTextboxUtils.jsm");
            TextboxSpellChecker.registerTextbox(textboxElt);
          ]]>
        </body>
      </method>

      <method name="setTopic">
        <body>
          <![CDATA[
            var changeCmdString = "/topic " + this.textbox.value;
            document.getBindingParent(this).sendMsg(changeCmdString);
            this.stopEdit();
          ]]>
        </body>
      </method>

      <method name="stopEdit">
        <body>
          <![CDATA[
            this.deck.selectedIndex = 0;
            document.getBindingParent(this).focus();
            TextboxSpellChecker.unregisterTextbox(this.textbox);
          ]]>
        </body>
      </method>

      <method name="closeBar">
        <body>
          <![CDATA[
            // Actions on the close button:
            //  if in edit mode, change back to the topic display
            //  otherwise close the bar as usual
            if (this.deck.selectedIndex == 1)
              this.stopEdit();
            else
              this.close();
          ]]>
        </body>
      </method>
    </implementation>

    <handlers>
     <handler event="keypress" keycode="VK_RETURN" action="this.setTopic();"/>
     <handler event="keypress" keycode="VK_ENTER" action="this.setTopic();"/>
     <handler event="keypress" keycode="VK_ESCAPE" action="this.stopEdit();"/>
    </handlers>
  </binding>
</bindings>
